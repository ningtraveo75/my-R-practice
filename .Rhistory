names(studentRecord)[[4]] <- "平均成績"
View(studentRecord)
View(studentRecord)
View(studentRecord)
studentRecord <-
list(
學號="410073058",
姓名="王小明",
性別="男",
學年平均成績=list(
一年級=88,
二年級=90.3,
三年級=92,
四年級=95
)
)
View(studentRecord)
names(studentRecord)[[4]] <- "平均成績"
studentRecord
View(studentRecord)
studentRecord <-
list(
學號="410073058",
姓名="王小明",
性別="男",
學年平均成績=list(
一年級=88,
二年級=90.3,
三年級=92,
四年級=95
)
)
names(studentRecord)[[4]]) <- "平均成績"
names(studentRecord)[[4]] <- "平均成績"
studentRecord
studentRecord <- str_replace_all(studentRecord)[[4]],"年級","")
studentRecord <- str_replace_all(studentRecord)[[4]],"年級"="")
names(studentRecord)[[4]][c("一年級","二年級","三年級","四年級")] <- c("一","二","三","四")
View(studentRecord)
View(studentRecord)
names(studentRecord)[[4]][c(1,2,3,4)] <- c("一","二","三","四")
names(studentRecord)[[4]][c(1,2,3,4)] #<- c("一","二","三","四")
#studentRecord
?names
names(studentRecord)[[4]][c(1,2,3,4)] <- c("一","二","三","四")
names(studentRecord[[4]]) <- c("一","二","三","四")
studentRecord
library(httr)
commitCheck <- content(GET("https://api.github.com/repos/rstudio/rstudio/commits"))
View(commitCheck)
View(commitCheck)
commit8Date <- commitCheck[[8]][["commit"]][["committer"]][["date"]]
commit8Date
commit8Date <- commitCheck[[8]][["commit"]][["committer"]][["date"]]
class(commit8Date)
commit8Date <- commitCheck[[8]][["commit"]][["committer"]][["date"]]
commit8Date
commit8Date <- ymd_hms(commit8Date)
commit8TWDate <- with_tz(commit8Date,tz="Asia/Taipei")
commit8Date <- ymd_hms(commit8Date)
commit8TWDate <- with_tz(commit8Date,tz="Asia/Taipei")
commit8TWDate
names(commitCheck)
names(commitCheck)
length(commitCheck)
length(commitCheck)
names(commitCheck) <- c(1:30)
commitCheck
length(commitCheck)
names(commitCheck) <- c(1:30)
names(commitCheck)
library(purrr)
map(commitCheck,~.[[3]][[2]][[3]][[1]]) -> allCommitDatesList
allCommitDates <- unlist(allCommitDatesList)
class(allCommitDates)
allCommitDates <- unlist(allCommitDatesList)
class(allCommitDates)
allCommitDates
allCommitDates <- ymd_hms(allCommitDates)
allCommitDatesTW <-with_tz(allCommitDates,tz="Asia/Taipei")
allCommitDatesTW
h <- hour(allCommitDatesTW)
m <- minute(allCommitDatesTW)
logicWithinTimeFrame <- h=4&m>=30 & h=5 & h=6&m<=30
h <- hour(allCommitDatesTW)
m <- minute(allCommitDatesTW)
logicWithinTimeFrame <- h="4"&m>="30" & h="5" & h="6"&m<="30"
h <- hour(allCommitDatesTW)
class(h)
m <- minute(allCommitDatesTW)
#logicWithinTimeFrame <- h="4"&m>="30" & h="5" & h="6"&m<="30"
#logicWithinTimeFrame
h <- hour(allCommitDatesTW)
class(h)
m <- minute(allCommitDatesTW)
logicWithinTimeFrame <- h=4&m>=30 | h=5 | h=6&m<=30
names(commitCheck) <-
str_c(
"commit", c(1:length(commitCheck))
)
names(commitCheck)
commitCheck
hours <- hour(allCommitDatesTW)
minutes <- minute(allCommitDatesTW)/60
hh.mm <- hours+minutes
logicWithinTimeFrame <- (hh.mm >= 4+(30/60) & hh.mm <= 6+(30/60))
logicWithinTimeFrame
library(readr)
transcriptData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
names(transcriptData)
#variableNames
variableNames <- names(transcriptData)
variableNames
View(transcriptData)
logicFromEcon <- str_detect(transcriptData[["學系"]],"經濟學系")
logicFromEcon
transcriptPartialData <- transcriptData[c("學號","學分數","必選修類別（必∕選∕通）")]
transcriptData
transcriptPartialData <- transcriptData[c("學號","學分數","必選修類別（必∕選∕通）")]
transcriptPartialData
View(transcriptPartialData)
transcriptPartialDataEcon <- list(transcriptPartialData[logicFromEcon])
transcriptPartialDataEcon <- list(transcriptPartialData[logicFromEcon])
View(transcriptPartialData)
econ <- transcriptData[logicFromEcon]
View(transcriptData)
logicFromEcon <-
transcriptData$學系 == "經濟學系"
logicFromEcon
transcriptPartialDataEcon <- list(
學號=transcriptPartialData$學號[logicFromEcon],
學分數=transcriptPartialData$學分數[logicFromEcon],
"必選修類別（必∕選∕通）"=transcriptPartialData$`必選修類別（必∕選∕通）`[logicFromEcon]
)
transcriptPartialDataEcon
logicBig <- (as.integer(x) > 50)
x <- as.character(round(runif(10)*100),10)
x
logicBig <- (as.integer(x) > 50)
logicBig
# logicBig
logicBig <- x>50
logicBig
randomGrades <- sample(40:80,15,replace = T)
randomCredits <- sample(0:3,15,replace=T)
data3 <- list(
成績=randomGrades,
學分數=randomCredits
)
# passData
pass <- randomGrades>=60
passData <- list(randomGrades[pass],randomCredits[pass])
passData
View(data3)
logiPass <- data3$成績>=60
logiPass
passData <- list(
成績=data3$成績[logiPass]
學分數=data3$學分數[logiPass]
library(lubridate); library(stringr); library(dplyr); library(readr); library(purrr)
logiPass <- data3$成績>=60
logiPass
passData <- list(
成績=data3$成績[logiPass]
學分數=data3$學分數[logiPass]
View(data3)
View(passData)
View(passData)
logiPass <- data3$成績>=60
logiPass
passData <- list(
"成績"=data3$成績[logiPass]
"學分數"=data3$學分數[logiPass]
logiPass <- data3$成績>=60
logiPass
passData <- list(
成績=data3$成績[logiPass]
學分數=data3$學分數[logiPass]
logiPass <- data3$成績>=60
logiPass
passData <- list(
成績 = data3$成績[logiPass]
學分數 = data3$學分數[logiPass]
logiPass <- data3$成績>=60
logiPass
passData <- list(
成績 = data3$成績[logiPass],
學分數 = data3$學分數[logiPass]
)
passData
str_replace_all(twDates,"(民國)"|"(月)","")
sample(99:103,15,replace = T)-> yy
sample(1:12,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
# twDates
str_replace_all(twDates,"(民國)"|"(月)","")
str_replace_all(twDates,"(民國)|(月)","")
knitr::opts_chunk$set(echo = TRUE, eval=F, message=F, warning = F)
library(lubridate); library(stringr); library(dplyr); library(readr); library(purrr)
sample(99:103,15,replace = T)-> yy
sample(1:12,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
# twDates
# twDates2
twDates2 <-
str_replace_all(twDates,c("民國"="","月"=""))
twDates2
twDates2
str_split(twDates2,"年") -> dataSplitList
dataSpliteList
twDates2
str_split(twDates2,"年") -> dataSplitList
dataSplitList
map(dataSplitList,~.[[2]]) -> monthList
monthList
unlist(monthList) -> monthVector
monthVector
twDates2
str_split(twDates2,"年") -> dataSplitList
dataSplitList
map(dataSplitList,~.[[2]]) -> monthList # 取出每個元素第二位
monthList
unlist(monthList) -> monthVector
monthVector
str_c(as.character(westYears),monthVector,"01",sep="/")
# westYears
m <- str_replace(twDates2,"年","-")
m2 <- str_sub(twDates2,1,3)
westYears <- as.integer(m2)+1911
twDates2
str_split(twDates2,"年") -> dataSplitList
dataSplitList
map(dataSplitList,~.[[2]]) -> monthList # 取出每個元素第二位
monthList
unlist(monthList) -> monthVector
monthVector
str_c(as.character(westYears),monthVector,"01",sep="/")
twDates2
str_split(twDates2,"年") -> dataSplitList
dataSplitList
map(dataSplitList,~.[[2]]) -> monthList # 取出每個元素第二位
monthList
unlist(monthList) -> monthVector
monthVector
str_c(as.character(westYears),monthVector,"01",sep="-")
twDates2
str_split(twDates2,"年") -> dataSplitList
dataSplitList
map(dataSplitList,~.[[2]]) -> monthList # 取出每個元素第二位
monthList
unlist(monthList) -> monthVector
monthVector
str_c(as.character(westYears),monthVector,"01",sep="-") -> westDates
westDates <- ymd(westDates)
westDates
load("sampledTranscriptData.Rda")
names(sampledTranscriptData) <-
c('學號','學期成績','學分數','學年','學期','必選修類別（必／選／通）','系級','科目名稱','年級','學屆')
(sampledTranscriptData$科目名稱 == "科目204") -> chosenSubjectLogi
sampledTranscriptData$學期成績[chosenSubjectLogi] -> chosenGrades
sum(chosenGrades<60)/length(chosenGrades) -> failRate
failRate
# failRate
rightsubject <- sampledTranscriptData[['科目名稱']]=='科目204'
grade <- as.integer(sampledTranscriptData[['學期成績']])
fail <- sum(grade[rightsubject]<60)
failRate <- fail/length(grade[rightsubject])
failRate
# failRate
rightsubject <- sampledTranscriptData[['科目名稱']]=='科目204'
grade <- as.integer(sampledTranscriptData[['學期成績']])
fail <- sum(grade[rightsubject]<60)
failRate <- fail/length(grade)
failRate
# sampledTranscriptData
sampledTranscriptData$學屆 <-
str_sub(sampledTranscriptData[['學號']],2,4)
sampledTranscriptData$系碼 <-
str_sub(sampledTranscriptData[['學號']],5,6)
# sampledTranscriptData
sampledTranscriptData$學屆 <-
str_sub(sampledTranscriptData[['學號']],2,4)
sampledTranscriptData$系碼 <-
str_sub(sampledTranscriptData[['學號']],5,6)
sampledTranscriptData
# sampledTranscriptData
sampledTranscriptData$學屆 <-
str_sub(sampledTranscriptData[['學號']],2,4)
sampledTranscriptData$系碼 <-
str_sub(sampledTranscriptData[['學號']],5,6)
head(sampledTranscriptData)
# sampledTranscriptData
sampledTranscriptData$學屆 <-
str_sub(sampledTranscriptData[['學號']],2,4)
sampledTranscriptData$系碼 <-
str_sub(sampledTranscriptData[['學號']],5,6)
head(sampledTranscriptData$學屆)
head((sampledTranscriptData$系碼))
# sampledTranscriptData$學系
sampledTranscriptData$學系 <-
str_replace_all(sampledTranscriptData[['系級']],c("1"="","2"="","3"="","4"=""))
# sampledTranscriptData$學系
sampledTranscriptData$學系 <-
str_replace_all(sampledTranscriptData[['系級']],c("1"="","2"="","3"="","4"=""))
head(sampledTranscriptData$學系)
# sampledTranscriptData$學系
sampledTranscriptData$學系 <-
str_replace_all(sampledTranscriptData[['系級']],c("1"="","2"="","3"="","4"=""))
head(sampledTranscriptData$系級)
head(sampledTranscriptData$學系)
sampledTranscriptData$學系 <-
str_replace_all(sampledTranscriptData[['系級']],"[:digit:]","")
head(sampledTranscriptData$學系)
# changeMajorStudent
changeMajorStudent <- sampledTranscriptData$學號[sampledTranscriptData$系碼 != 73]
changeMajorStudent <-unique(changeMajorStudent)
# changeMajorStudent
changeMajorStudent <- sampledTranscriptData$學號[sampledTranscriptData$系碼 != 73]
changeMajorStudent <-unique(changeMajorStudent)
head(changeMajorStudent)
(sampledTranscriptData$系碼!="73" &
sampledTranscriptData$學系=="經濟學系") -> logiCheck
unique(sampledTranscriptData$學號[logiCheck]) -> changeMajorStudent
changeMajorStudent
# changeMajorStudent
changeMajorStudent <- sampledTranscriptData$學號[sampledTranscriptData$系碼 != 73 & sampledTranscriptData$學系=="經濟學系"]
changeMajorStudent <-unique(changeMajorStudent)
head(changeMajorStudent)
# changeMajorStudent
changeMajorStudent <- sampledTranscriptData$學號[sampledTranscriptData$系碼 != 73]
changeMajorStudent <-unique(changeMajorStudent)
head(changeMajorStudent)
(sampledTranscriptData$學號 == "410073409b" &
sampledTranscriptData$學年==100 &
sampledTranscriptData$學期==1) -> logiSelect
sum(sampledTranscriptData$學分數[logiSelect]*
sampledTranscriptData$學期成績[logiSelect])/sum(sampledTranscriptData$學分數[logiSelect]) -> studentGPA
studentGPA
(sampledTranscriptData$學號 == "410073409b" &
sampledTranscriptData$學年==101 &
sampledTranscriptData$學期==1) -> logiSelect
sum(sampledTranscriptData$學分數[logiSelect]*
sampledTranscriptData$學期成績[logiSelect])/sum(sampledTranscriptData$學分數[logiSelect]) -> studentGPA
studentGPA
list(
學系=unique(sampledTranscriptData$學系),
系碼=unique(sampledTranscriptData$系碼)
)
list(
學系=unique(sampledTranscriptData$學系),
系碼=unique(sampledTranscriptData$系碼)
)
list
list(
學系=unique(sampledTranscriptData$學系),
系碼=unique(sampledTranscriptData$系碼)
)
list(
學系=unique(sampledTranscriptData$學系),
系碼=unique(sampledTranscriptData$系碼)
) -> a
a
View(a)
list(
學系=sampledTranscriptData$學系,
系碼=sampledTranscriptData$系碼
) -> a
a <- unique(a)
View(a)
list(
學系=unique(sampledTranscriptData$學系),
系碼=unique(sampledTranscriptData$系碼)
) -> a
a
knitr::opts_chunk$set(echo = TRUE)
Vector1 <- letters[1:6]
Vector1
names(Vector1)
names(Vector1) <- c('名稱1','名稱2','名稱3','名稱4','名稱5','名稱6')
names(Vector1)
Vector1[["名稱4"]]
StuDF2 <- data.frame(
學號=c(172,214,322,425,517),
姓名=c("小明","大雄","胖虎","小新","大白"),
成績=c(80,60,90,70,50),
stringsAsFactors = FALSE
)
StuDF2
colnames(StuDF2)
names(StuDF2)
colnames(StuDF2) <- c("col1","col2","col3")
colnames(StuDF2)
colnames(StuDF2) <- c("姓名")
colnames(StuDF2)
colnames(StuDF2)[[2]] <- c("姓名")
colnames(StuDF2)
StuDF2 <- data.frame(
學號=c(172,214,322,425,517),
姓名=c("小明","大雄","胖虎","小新","大白"),
成績=c(80,60,90,70,50),
stringsAsFactors = FALSE
)
StuDF2
colnames(StuDF2)
names(StuDF2)
colnames(StuDF2) <- c("col1","col2","col3")
colnames(StuDF2)
colnames(StuDF2)[[2]] <- c("姓名")
colnames(StuDF2)
colnames(StuDF2)[c(2,3)] <- c("name","grade")
colnames(StuDF2)
View(StuDF2)
install.packages("stringr")
rownames(StuDF2) <- str_c("第",1:5,"筆")
library(stringr)
rownames(StuDF2) <- str_c("第",1:5,"筆")
rownames(StuDF2)
a <- c("1","b","TRUE")
a
a[[2]] <- "c" # 元素存在
a[[5]] <- "7" # 元素不存在
a
b <- list(
元素1=1,
元素2="Hello",
元素3=TRUE
)
b
b[[3]] <- FALSE
b[[5]] <- "7"
b
b <- list(
元素1=1,
元素2="Hello",
元素3=TRUE
)
b
b[[3]] <- FALSE
b[[5]] <- "7"
b
b
b$元素3 <- TRUE
b
b
b$元素3 <- TRUE
b
names(b)
b[["新元素A"]] <- c(1:3)
b$新元素B <- c(T,F,T)
b
library(readr)
exData3 <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/exData3.csv",
col_types = cols(
匯率 = col_number(),
期間 = col_character()))
View(exData3)
library(lubridate)
library(lubridate)
class(exData3$期間)
exData3$期間 <- ymd(exData3$期間)
View(exData3)
isAsiaCrisis <-
exData3>=ymd(1997-06-01) & exData3<=ymd(1998-12-01)
isAsiaCrisis <-
exData3>=ymd("1997-06-01") & exData3<=ymd("1998-12-01")
isAsiaCrisis <-
exData3$期間>=ymd("1997-06-01") & exData3$期間<=ymd("1998-12-01")
isAsiaCrisis
isAsiaCrisis <-
exData3$期間>=ymd("1997-06-01") & exData3$期間<=ymd("1998-12-01")
sum(isAsiaCrisis)
isAsiaCrisis <-
exData3$期間>=ymd("1997-06-01") & exData3$期間<=ymd("1998-12-01")
isAsiaCrisis
View(exData3)
exData3[isAsiaCrisis]
exData3[isAsiaCrisis,]
View(exData3)
exData3[isAsiaCrisis==T,]
View(b)
子樣本 <- exData3[isAsiaCrisis==T,]
子樣本
View(子樣本)
子樣本 <- exData3[isAsiaCrisis==T]
View(子樣本)
library(readr)
exData3 <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/exData3.csv",
col_types = cols(
匯率 = col_number(),
期間 = col_character()))
names(exData3)
library(lubridate)
class(exData3$期間)
exData3$期間 <- ymd(exData3$期間)
isAsiaCrisis <-
exData3$期間>=ymd("1997-06-01") & exData3$期間<=ymd("1998-12-01")
isAsiaCrisis
子樣本 <- exData3[isAsiaCrisis==T,]
子樣本
子樣本 <- exData3[isAsiaCrisis==T]
子樣本 <- exData3[isAsiaCrisis==T,]
子樣本
exampleDF <- data.frame(
exchangeRate=c(22,3,3,2,7,12,13)
isAsiaCrisis=c(T,T,F,F,F,T,T)
exampleDF <- data.frame(
exchangeRate=c(22,3,3,2,7,12,13),
isAsiaCrisis=c(T,T,F,F,F,T,T)
)
exampleDF
exampleDF[c(1,2,6,7),]
exampleDF[c(T,T,F,F,F,T,T),]
