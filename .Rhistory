plactice(5,3)
plactice <- function(x,a){
value <- a+x
return(value)
}
supply_fun <- function(a,b,P){
sup_value <- a+b*P
return(sup_value)
}
demand_fun <- function(c,d,P){
dem_value <- c-d*P
return(dem_value)
}
supply_fun <- function(a,b,P){
Qs <- a+b*P
return(Qs)
}
demand_fun <- function(c,d,P){
Qd <- c-d*P
return(Qd)
}
ans <- supply_fun(0,1,1)-demand_fun(5,1,1)
ans
ans <- demand_fun(5,1,1)-supply_fun(0,1,1)
ans
gpa_fun <- function(studentID){
transcriptDataFinal$學號==studentID -> logiChosenStudent
subSample <- transcriptDataFinal[logiChosenStudent,]
sum(subSample$學期成績*subSample$學分數)/
sum(subSample$學分數) -> GPA
return(GPA)
}
gpa_fun("479W9ee8e")
gpa_fun("9efW9aea5")
knitr::opts_chunk$set(echo = TRUE, eval=F, message=F, warning = F)
library(lubridate)
(invoiceList$訂單時區=="America/New_York") -> nyLogical
load("invoiceList.Rda")
str(invoiceList)
# invoiceList
names(invoiceList)[[2]] <- "訂單時區之下單時間"
# invoiceList
t <- invoiceList[[2]]
invoiceList[[2]] <- ymd_hms(t)
invoiceList
library(lubridate)
(invoiceList$訂單時區=="America/New_York") -> nyLogical
View(params)
View(invoiceList)
knitr::opts_chunk$set(echo = TRUE, eval=F, message=F, warning = F)
load("invoiceList.Rda")
str(invoiceList)
View(invoiceList)
library(lubridate); library(stringr); library(dplyr); library(readr); library(purrr)
load("invoiceList.Rda")
str(invoiceList)
View(invoiceList)
# invoiceList
names(invoiceList)[[2]] <- "訂單時區之下單時間"
View(invoiceList)
library(lubridate)
(invoiceList$訂單時區=="America/New_York") -> nyLogical
(invoiceList$訂單時區=="Asia/Taipei") -> tpLogical
ymd_hms(invoiceList$`訂單時區之下單時間`[nyLogical],tz="America/New_York") -> nyDateTime
invoiceList$UTC時間[nyLogical] <- with_tz(nyDateTime,tzone="UTC")
ymd_hms(invoiceList$`訂單時區之下單時間`[tpLogical],tz="Asia/Taipei") -> tpDateTime
invoiceList$UTC時間[tpLogical] <- with_tz(tpDateTime,tzone="UTC")
invoiceList
library(lubridate)
(invoiceList$訂單時區=="America/New_York") -> nyLogical
(invoiceList$訂單時區=="Asia/Taipei") -> tpLogical
invoiceList$nyLogical <- nyLogical
invoiceList$tpLogical <- tpLogical
ymd_hms(invoiceList$`訂單時區之下單時間`[nyLogical],tz="America/New_York") -> nyDateTime
invoiceList$UTC時間[nyLogical] <- with_tz(nyDateTime,tzone="UTC")
ymd_hms(invoiceList$`訂單時區之下單時間`[tpLogical],tz="Asia/Taipei") -> tpDateTime
invoiceList$UTC時間[tpLogical] <- with_tz(tpDateTime,tzone="UTC")
invoiceList
View(invoiceList)
nyDateTime
View(invoiceList)
load("invoiceList.Rda")
str(invoiceList)
View(invoiceList)
# invoiceList
names(invoiceList)[[2]] <- "訂單時區之下單時間"
View(params)
View(invoiceList)
load("invoiceList.Rda")
str(invoiceList)
?str()
View(invoiceList)
# invoiceList
names(invoiceList)[[2]] <- "訂單時區之下單時間"
View(invoiceList)
names(invoiceList)[[1]] <- "訂單時區"
names(invoiceList)[[3]] <- "UTC時間"
View(invoiceList)
library(lubridate)
(invoiceList$訂單時區=="America/New_York") -> nyLogical
(invoiceList$訂單時區=="Asia/Taipei") -> tpLogical
invoiceList$nyLogical <- nyLogical
invoiceList$tpLogical <- tpLogical
ymd_hms(invoiceList$`訂單時區之下單時間`[nyLogical],tz="America/New_York") -> nyDateTime
invoiceList$UTC時間[nyLogical] <- with_tz(nyDateTime,tzone="UTC")
ymd_hms(invoiceList$`訂單時區之下單時間`[tpLogical],tz="Asia/Taipei") -> tpDateTime
invoiceList$UTC時間[tpLogical] <- with_tz(tpDateTime,tzone="UTC")
invoiceList
knitr::opts_chunk$set(echo = TRUE)
library(readr)
transcriptDataFinal <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
gpa_fun <- function(studentID){
transcriptDataFinal$學號==studentID -> logiChosenStudent
subSample <- transcriptDataFinal[logiChosenStudent,]
sum(subSample$學期成績*subSample$學分數)/
sum(subSample$學分數) -> GPA
return(GPA)
}
library(readr)
transcriptDataFinal <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
gpa_fun <- function(studentID){
transcriptDataFinal$學號==studentID -> logiChosenStudent
subSample <- transcriptDataFinal[logiChosenStudent,]
sum(subSample$學期成績*subSample$學分數)/
sum(subSample$學分數) -> GPA
return(GPA)
}
gpa_fun("479W9ee8e")
gpa_fun("9efW9aea5")
x <- ymd_hms("1973-02-21 12:05:22")
tzchange <- with_tz(x,tz="Asia/Taipei")
tzchange <- with_tz(ymd_hms("1973-02-21 12:05:22"),tz="Asia/Taipei")
fromTzone <- ymd_hms("1973-02-21 12:05:22")
tzchange <- with_tz(ymd_hms("1973-02-21 12:05:22"),tz="Asia/Taipei")
fromTzone <- ymd_hms("1973-02-21 12:05:22")
toTzone <- with_tz(ymd_hms("1973-02-21 12:05:22"),tz="Asia/Taipei")
fromTzone <- ymd_hms("1973-02-21 12:05:22")
toTzone <- with_tz(fromTzone,tz="Asia/Taipei")
fromDateTime <- ymd_hms("1973-02-21 12:05:22")
toDateTime <- with_tz(fromTzone,tz="Asia/Taipei")
fromDateTime <- ymd_hms("1973-02-21 12:05:22")
toDateTime <- with_tz(fromTzone,tz="Asia/Taipei")
fromDateTime <- ymd_hms("1973-02-21 12:05:22")
toDateTime <- with_tz(fromTzone,tz="Asia/Taipei")
fromDateTime <- ymd_hms("1973-02-21 12:05:22")
toDateTime <- with_tz(fromDateTime,tz="Asia/Taipei")
toDateTime
ymd_hms_tzChange <- function(input){
fromTzone <- ymd_hms(input)
toTzone <- with_tz(fromTzone,tz="Asia/Taipei")
return(toDateTime)
}
ymd_hms_tzChange("1973-02-21 12:05:22")
ymd_hms_tzChange(1973-02-21 12:05:22)
ymd_hms_tzChange <- function(input){
fromTzone <- ymd_hms("input")
toTzone <- with_tz(fromTzone,tz="Asia/Taipei")
return(toDateTime)
}
ymd_hms_tzChange(1973-02-21 12:05:22)
ymd_hms_tzChange <- function(input){
fromTzone <- ymd_hms(input)
toTzone <- with_tz(fromTzone,tz="Asia/Taipei")
return(toDateTime)
}
ymd_hms_tzChange("1973-02-21 12:05:22")
ymd_hms_tzChange <- function(input,fromTzone,toTzone){
fromDateTime <- ymd_hms(input,tz=fromTzone)
toDateTime <- with_tz(fromDateTime,tz=toTzone)
toDateTime
}
ymd_hms_tzChange("1973-02-21 12:05:22","America/New_York","Asia/Taipei")
ymd_hms_tzChange <- function(input,fromTzone,toTzone){
fromDateTime <- ymd_hms(input,tz=fromTzone)
toDateTime <- with_tz(fromDateTime,tz=toTzone)
toDateTime
}
ymd_hms_tzChange("1973-02-21 12:05:22","America/New_York","Asia/Taipei")
View(ymd_hms_tzChange)
ymd_hms_tzChange <- function(input,fromTzone,toTzone){
fromDateTime <- ymd_hms(input,tz=fromTzone)
toDateTime <- with_tz(fromDateTime,tz=toTzone)
return(toDateTime)
}
ymd_hms_tzChange("1973-02-21 12:05:22","America/New_York","Asia/Taipei")
ymd_hms_tzChange <- function(input,fromTzone,toTzone){
fromDateTime <- ymd_hms(input,tz=fromTzone)
toDateTime <- with_tz(fromDateTime,tz=toTzone)
return(toDateTime)
}
ymd_hms_tzChange("1973-02-21 12:05:22","America/New_York","Asia/Taipei")
fromDateTime <- ymd_hms("1973-02-21 12:05:22",tz="America/New_York")
toDateTime <- with_tz(fromDateTime,tz="Asia/Taipei")
toDateTime
ymd_hms_tzChange("1973-02-21 12:05:22","American/New_York","Asia/Taipei")
knitr::opts_chunk$set(echo = TRUE)
library(stringr)
sample(99:103,15,replace = T)-> yy
sample(1:12,15,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
twDates
twDates
library(stringr); library(lubridate)
yyyy<-as.integer(str_extract(twDates,"(?<=(民國))[:digit:]+"))+1911
mm<-str_extract(twDates,"[:digit:]+(?=月)")
yyyymmdd <- ymd(str_c(yyyy,mm,"01",sep="-"))
yyyymmdd
twDates
library(stringr); library(lubridate)
yyyy<-as.integer(str_extract(twDates,"(?<=(民國))[:digit:]+"))+1911
mm<-str_extract(twDates,"[:digit:]+(?=月)")
yyyymmdd <- ymd(str_c(yyyy,mm,"01",sep="-"))
yyyymmdd
date_convert_twYM <- function(twDates){
yyyy<-as.integer(str_extract(twDates,"(?<=(民國))[:digit:]+"))+1911
mm<-str_extract(twDates,"[:digit:]+(?=月)")
yyyymmdd <- ymd(str_c(yyyy,mm,"01",sep="-"))
return(yyyymmdd)
}
date_convert_twYM(民國103年10月)
date_convert_twYM("民國103年10月")
date_convert_twYM <- function(twDates){
yyyy<-as.integer(str_extract(twDates,"(?<=(民國))[:digit:]+"))+1911
mm<-str_extract(twDates,"[:digit:]+(?=月)")
yyyymmdd <- ymd(str_c(yyyy,mm,"01",sep="-"))
return(yyyymmdd)
}
date_convert_twYM("民國103年10月")
sample(99:103,15,replace = T)-> yy
sample(1:12,15,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
date_convert_twYM(twDates)
sample(99:103,15,replace = T)-> yy
sample(1:12,15,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
date_convert_twYM(twDates)
sample(99:103,15,replace = T)-> yy
sample(1:12,15,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
date_convert_twYM(twDates)
sample(99:103,15,replace = T)-> yy
sample(1:12,15,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
date_convert_twYM(twDates)
sample(99:103,15,replace = T)-> yy
sample(1:12,15,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
date_convert_twYM(twDates)
sample(99:103,15,replace = T)-> yy
sample(1:12,15,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
date_convert_twYM(twDates)
sample(99:103,15,replace = T)-> yy
sample(1:12,15,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
date_convert_twYM(twDates)
sample(99:103,15,replace = T)-> yy
sample(1:12,15,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
twDates
date_convert_twYM(twDates)
sample(99:103,15,replace = T)-> yy
sample(1:12,15,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
twDates
date_convert_twYM(twDates)
sample(99:103,15,replace = T)-> yy
sample(1:12,15,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
twDates
date_convert_twYM(twDates)
sample(99:103,15,replace = T)-> yy
sample(1:12,15,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
twDates
date_convert_twYM(twDates)
utility_cobb_douglass2 <- function(x,y,.alpha=0.5,.beta=0.5){
utilValue <- x^.alpha*y^.beta
return(utilValue)
}
utility_cobb_douglass2(1,2) # 使用預設值
utility_cobb_douglass2(1,2,0.5,0.8) # 自定參數值
date_convert_twYM <- function(twDates,dd="01"){
yyyy<-as.integer(str_extract(twDates,"(?<=(民國))[:digit:]+"))+1911
mm<-str_extract(twDates,"[:digit:]+(?=月)")
yyyymmdd <- ymd(str_c(yyyy,mm,dd,sep="-"))
return(yyyymmdd)
}
sample(99:103,15,replace = T)-> yy
sample(1:12,15,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates_New
twDates_New
date_convert_twYM(twDates_New)
twDates_New
date_convert_twYM(twDates_New)
date_convert_twYM(twDates_New,"04")
sample(99:103,15,replace = T)-> yy
sample(1:12,15,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates_New
twDates_New
date_convert_twYM(twDates_New)
date_convert_twYM(twDates_New,"04")
knitr::opts_chunk$set(echo = TRUE)
library(lubridate); library(stringr); library(purrr); library(readr)
library(readr)
finStatement <- read_csv("http://mopsfin.twse.com.tw/opendata/t187ap06_O_ci.csv")
View(finStatement)
loss <- finStatement[["營業利益（損失）"]]<0
loss1Companies <- finStatement[loss]
loss <- finStatement[[,"營業利益（損失）"]]<0
loss <- finStatement[["營業利益（損失）",]]<0
loss1Companies <- finStatement[loss]
loss <- finStatement[["營業利益（損失）",]]
loss1Companies <- finStatement[loss]
loss <- finStatement["營業利益（損失）",]
loss1Companies <- finStatement[loss]
View(loss)
loss <- finStatement[,"營業利益（損失）"]
loss1Companies <- finStatement[loss]
View(loss)
loss <- finStatement[,"營業利益（損失）"]<0
loss1Companies <- finStatement[loss]
loss <- finStatement[,"營業利益（損失）"]<0
loss1Companies <- finStatement[,"公司名稱"][loss]
loss <- finStatement[,"營業利益（損失）"]<0
loss1Companies <- finStatement$公司名稱[loss]
loss <- finStatement[,"營業利益（損失）"]<0
loss1Companies <- finStatement$公司名稱[loss]
loss1Companies
loss <- finStatement$`營業利益（損失）`<0
loss1Companies <- finStatement$公司名稱[loss]
loss1Companies
loss <- finStatement$`營業利益（損失）`<0
loss1Companies <- finStatement$`公司名稱`[loss]
loss1Companies
loss1 <- finStatement$`營業利益（損失）`<0
loss1Companies <- finStatement$`公司名稱`[loss1]
loss1Companies
loss2 <- finStatement$`基本每股盈餘（元）`<0
loss2Companies <- finStatement$`公司名稱`[loss2]
loss2Companies
only1Loss <- finStatement$`營業利益（損失）`<0 | finStatement$`基本每股盈餘（元）`<0
only1LossCompanies <- finStatement$`公司名稱`[only1Loss]
only1LossCompanies
only1Loss <- finStatement[,`營業利益（損失）`]<0 | finStatement[,`基本每股盈餘（元）`]<0
only1Loss <- finStatement[,營業利益（損失）]<0 | finStatement[,`基本每股盈餘（元）`]<0
only1Loss <- finStatement[,"營業利益（損失）"]<0 | finStatement[,"基本每股盈餘（元）"]<0
only1LossCompanies <- finStatement$`公司名稱`[only1Loss]
as.data.frame(only1LossCompanies, stringsAsFactors = FALSE)
only1LossCompanies
library(httr)
exhibitionList <- content(GET("https://cloud.culture.tw/frontsite/trans/SearchShowAction.do?method=doFindTypeJ&category=6"))
View(exhibitionList)
str(exhibitionList[[1]])
View(exhibitionList)
length(exhibitionList[[1]])
numExhibitions
numExhibitions <- length(exhibitionList[[1]])
numExhibitions
numExhibitions <- length(exhibitionList)
numExhibitions
str(exhibitionList[[1]])
df_oneShow <- data.frame(
title=exhibitionList$title,
time=showInfo$time,
location=showInfo$location,
locationName=showInfo$locationName,
price=showInfo$price,
endTime=showInfo$endTime,
sourceWebName=showInfo$sourceWebName,
stringsAsFactors=FALSE
)
str(exhibitionList[[1]])
View(exhibitionList)
df_oneShow <- data.frame(
title=exhibitionList[[1]][["title"]],
time=exhibitionList[[1]][["showInfo"]][[1]][["time"]],
location=exhibitionList[[1]][["showInfo"]][[1]][["location"]],
locationName=exhibitionList[[1]][["showInfo"]][[1]][["locationName"]],
price=exhibitionList[[1]][["showInfo"]][[1]][["price"]],
endTime=exhibitionList[[1]][["showInfo"]][[1]][["endTime"]],
sourceWebName=exhibitionList[[1]][["sourceWebName"]],
stringsAsFactors=FALSE
)
df_oneShow <- data.frame(
title=exhibitionList[[1]][["title"]],
time=exhibitionList[[1]][["showInfo"]][[1]][["time"]],
location=exhibitionList[[1]][["showInfo"]][[1]][["location"]],
locationName=exhibitionList[[1]][["showInfo"]][[1]][["locationName"]],
price=exhibitionList[[1]][["showInfo"]][[1]][["price"]],
endTime=exhibitionList[[1]][["showInfo"]][[1]][["endTime"]],
sourceWebName=exhibitionList[[1]][["sourceWebName"]],
stringsAsFactors=FALSE
)
names(df_oneShow)
dataframe_show_info <- function(exhibitionInput){
df_oneShow <- data.frame(
title=exhibitionInput[["title"]],
time=exhibitionInput[["showInfo"]][[1]][["time"]],
location=exhibitionInput[["showInfo"]][[1]][["location"]],
locationName=exhibitionInput[["showInfo"]][[1]][["locationName"]],
price=exhibitionInput[["showInfo"]][[1]][["price"]],
endTime=exhibitionInput[["showInfo"]][[1]][["endTime"]],
sourceWebName=exhibitionInput[["sourceWebName"]],
stringsAsFactors=FALSE
)
return(df_oneShow)
}
dataframe_show_info(exhibitionList[[5]])
dataframe_show_info <- function(exhibitionInput){
df_oneShow <- data.frame(
title=exhibitionInput[["title"]],
time=exhibitionInput[["showInfo"]][[1]][["time"]],
location=exhibitionInput[["showInfo"]][[1]][["location"]],
locationName=exhibitionInput[["showInfo"]][[1]][["locationName"]],
price=exhibitionInput[["showInfo"]][[1]][["price"]],
endTime=exhibitionInput[["showInfo"]][[1]][["endTime"]],
sourceWebName=exhibitionInput[["sourceWebName"]],
stringsAsFactors=FALSE
)
return(df_oneShow)
}
dataframe_show_info
View(dataframe_show_info)
View(df_oneShow)
dataframe_show_info(exhibitionList[[5]])
library(purrr)
map_dfr(exhibitionList,dataframe_show_info) -> df_allShows
library(purrr)
map_dfr(exhibitionList,dataframe_show_info) -> df_allShows
View(df_allShows)
View(df_allShows)
df_allShows$sourceWebName <- as.factor(df_allShows$sourceWebName)
levels(df_allShows$sourceWebName)
df_allShows$sourceWebName <- as.factor(df_allShows$sourceWebName)
levels(df_allShows$sourceWebName)
df_allShows$sourceWebName <- as.factor(df_allShows$sourceWebName)
levels(df_allShows$sourceWebName)
logic <- df_allShows$sourceWebName=="全國藝文活動資訊系統"
totalCount <- sum(logic)
logic <- df_allShows$sourceWebName=="全國藝文活動資訊系統"
totalCount <- sum(logic)
totalCount
only1Loss <- finStatement$`營業利益（損失）`<0 | finStatement$`基本每股盈餘（元）`<0
only1LossCompanies <- finStatement$`公司名稱`[only1Loss]
only1LossCompanies
xor(logiLoss1,logiLoss2) -> logiOnly1Loss
xor(loss1,loss2) -> logiOnly1Loss
finStatement$公司名稱[logiOnly1Loss] -> only1LossCompanies
# only1LossCompanies
xor(loss1,loss2) -> logiOnly1Loss
finStatement$公司名稱[logiOnly1Loss] -> only1LossCompanies
only1LossCompanies
finStatement[logiOnly1Loss,] -> subsample
subsample
knitr::opts_chunk$set(echo = TRUE)
nowAnnounce <- function(){
currentDateTime <- Sys.time()
hh<-hour(currentDateTime)
mm<-minute(currentDateTime)
cat("現在是",hh,"點",mm,"分")
}
nowAnnounce <- function(){
currentDateTime <- Sys.time()
hh<-hour(currentDateTime)
mm<-minute(currentDateTime)
cat("現在是",hh,"點",mm,"分")
}
nowAnnounce()
browseURL("https://www.ntpu.edu.tw")
textbookURL <- function(){
browseURL("https://via.hypothes.is/https://bookdown.org/tpemartin/ntpu-programming-for-data-science/")
}
textbookURL()
library(readr)
transcriptDataFinal <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
gpa_fun <- function(studentID){
transcriptDataFinal$學號==studentID -> logiChosenStudent
subSample <- transcriptDataFinal[logiChosenStudent,]
sum(subSample$學期成績*subSample$學分數)/
sum(subSample$學分數) -> GPA
return(GPA)
}
gpa_fun2 <- function(studentID){
transcriptDataFinal$學號==studentID -> logiChosenStudent
subSample <- transcriptDataFinal[logiChosenStudent,]
sum(subSample$學期成績*subSample$學分數)/
sum(subSample$學分數) -> GPA
return(
list(
平均成績=GPA,
成績單=subSample
)
)
}
gpa_fun2("92aS67fee") -> outputValue
outputValue$平均成績
outputValue$成績單
demand_supply_fun <- function(P,a,b,c,d){
Qs <- a+b*P
Qd <- c-d*P
ans <- Qd-Qs
return(
list(
供給量=Qs,
需求量=Qd,
超額供給量=ans
)
)
}
demand_supply_fun(1,0,1,5,1)
a <- readline(prompt = "請輸入一個數字： ")
