---
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# Sequence

```{r}
load(url("https://www.dropbox.com/s/duh5aaqgl2f5m3z/loopTranscriptData.Rda?raw=1"))
studentIds <- unique(transcriptDataFinal$學號) # 全部可能學號
studentIds5 <- studentIds[1:5] # 前5筆學號
```

```{r}
studentIds5
seq_along(studentIds5)
```

```{r}
length(studentIds5)
1:length(studentIds5)
```

# 範例一

任務：針對studentIds5裡的「每一個」學號進行print()

## sequence source
```{r}
studentIds5
```

## body
把任務定義在對「第i個」
任務：針對studentIds5裡的「第i個」學號進行print()
```{r}
i <- 1

print(studentIds5[[i]]) #body
```

## for loop

使用以下for loop模式，完成對「每個」的任務。
for(i in seq_along(sequence_source)){
  body
}
```{r}
for (i in seq_along(studentIds5)) {
  print(studentIds5[[i]])
}
```

# 範例2：

```{r}
gmailAddress <- c(
  "tim@gmail.com",
  "anita",
  "yellen@gmail.com",
  "huang@gmail.com"
)
```

任務：檢查gmailAddress「每個」元素，若沒有寫“@gmail.com”則加上。

## sequence source
```{r}
gmailAddress
```

## body
任務：檢查gmailAddress「第i個」元素(令i<-1)，若沒有寫“@gmail.com”則加上。
```{r}
i <- 1

if(str_detect(gmailAddress,"@gmail.com")){
    print(gmailAddress[[i]])
  } else {
    str_c(gmailAddress,"@gmail.com")
    print(gmailAddress[[i]]) 
  } 
```
# 正確答案一
```{r}
i <- 1

if(str_detect(gmailAddress[[i]],"@gmail.com")){
    print(gmailAddress[[i]])
  } else {
    print(str_c(gmailAddress[[i]],"@gmail.com")) 
  } 
```
# 正確答案二
```{r}
i <- 1

if(str_detect(gmailAddress[[i]],"@gmail.com")){
    print(gmailAddress[[i]])
  } else {
    correctAddress <- str_c(gmailAddress[[i]],"@gmail.com")
    print(correctAddress) 
  } 
```

## for loop
```{r}
for (i in seq_along(gmailAddress)) {
if(str_detect(gmailAddress[[i]],"@gmail.com")){
    print(gmailAddress[[i]])
  } else {
    correctAddress <- str_c(gmailAddress[[i]],"@gmail.com")
    print(correctAddress) 
  } 
}
```

# Commit history

```{r}
load(url("https://www.dropbox.com/s/qnz9paigf61yjus/commitHistory.Rda?raw=1"))
```

任務0：print「每個」commit的author。

## sequence source
```{r}
commitHistory$commit$author$name
```

## body
print「第i個」commit的author。
```{r}
i <- 1

print(commitHistory[[i]]$commit$author$name)
```

## for loop
```{r}
for (i in seq_along(commitHistory)) {
  print(commitHistory[[i]]$commit$author$name)
}
```


```{r}
for (i in seq_along(commitHistory)) {
  print(
    str_c(
      "Arthor is ",
      commitHistory[[i]]$commit$author$name,
      ". Committer is ",
      commitHistory[[i]]$commit$committer$name,
      ". Date is ",
      commitHistory[[i]]$commit$committer$date
   )
  )
}
```

任務0：print「每個」commit的author等於committer的邏輯判斷結果。

## sequence source
```{r}
commitHistory
```

## body
```{r}
i <- 1

logi <- commitHistory[[i]]$commit$author$name==commitHistory[[i]]$commit$committer$name
print(logi)
```

## for loop
```{r}
for (i in seq_along(commitHistory)) {
  logi <- commitHistory[[i]]$commit$author$name==commitHistory[[i]]$commit$committer$name
print(logi)
}
```
