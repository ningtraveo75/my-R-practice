Mat1[[2]]
Mat2 <- matrix(
c("a","b","c","d"), 2, 2
)
Mat2
class(Mat2)
typeof(Mat2)
Mat2[[3]]
Mat2[c(1,4)]
Mat2[c(T,F,F,T)]
StuList <- list(
學號=c(172,214,322,425,517),
姓名=c("小明","大雄","胖虎","小新","大白"),
成績=c(80,60,90,70,50)
)
StuList
StuDF <- data.frame(
學號=c(172,214,322,425,517),
姓名=c("小明","大雄","胖虎","小新","大白"),
成績=c(80,60,90,70,50)
)
StuDF
class(StuDF)
typeof(StuDF)
StuDF
StuDF[[2]][[3]]
class(StuDF$姓名)
StuDF$姓名 <- as.character(StuDF$姓名)
class(StuDF$姓名)
StuDF2 <- data.frame(
學號=c(172,214,322,425,517),
姓名=c("小明","大雄","胖虎","小新","大白"),
成績=c(80,60,90,70,50),
stringsAsFactors = FALSE
)
StuDF2
LETTERS # R內設元素值為英文字母群的character vector
chosenLETTERS <- LETTERS[1:15]
matObj1 <- matrix(chosenLETTERS,5,3)
matObj1
matObj1[3,2]
matObj1[,2]
chosenLETTERS <- LETTERS[1:8]
m <- matrix(chosenLETTERS,2,4)
m
tolower(m) # 轉成小寫
toupper(m) # 轉成大寫
matObj1
matObj1[c(1,4),c(2,3)]
matObj1[c(T,F,F,T,F),c(F,T,T)]
library(readr)
classSurvey <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/classSurvey.csv")
class(classSurvey)
# classSurvey[,]
classSurvey[,c(4,5)]
classSurvey[c(1:60),c(4,5)]
logical_index <- classSurvey[,4]==女
logical_index <- classSurvey[c("性別")]==女
install.packages(c("dplyr", "purrr"))
knitr::opts_chunk$set(echo = TRUE, eval=F, message=F, warning = F)
library(lubridate); library(stringr); library(dplyr); library(readr); library(purrr)
x <- as.character(round(runif(10)*100),10)
x
# logicBig
logicBig <- x>50
logicBig
# compoundObject
compoundObject <- list(1,hello,TRUE)
# compoundObject
compoundObject <- list(1,"hello",TRUE)
View(compoundObject)
# compoundObject
compoundObject <- list(1L,"hello",TRUE)
View(compoundObject)
# compoundObject
compoundObject <- list(1L,"hello",TRUE)
typeof(compoundObject[[1]])
# compoundObject
compoundObject <- list(1L,"hello",TRUE)
class(compoundObject[[1]])
# compoundObject
compoundObject <- list(1L,"hello",TRUE)
class(compoundObject[[1]])
# compoundObject
compoundObject <- list(1L,"hello",TRUE)
load("submitTime.Rda")
load("submitTime.Rda")
knitr::opts_chunk$set(echo = TRUE, eval=F, message=F, warning = F)
load("submitTime.Rda")
# compoundObject
compoundObject <- list(1L,"hello",TRUE)
# logicBig
logicBig <- x>50
x <- as.character(round(runif(10)*100),10)
x
# logicBig
logicBig <- x>50
logicBig
# nyTime
nyTime <- with_tz(submitTime,tz="America/New_York")
library(lubridate); library(stringr); library(dplyr); library(readr); library(purrr)
# nyTime
nyTime <- with_tz(submitTime,tz="America/New_York")
load("submitTime.Rda")
# nyTime
nyTime <- with_tz(submitTime,tz="America/New_York")
# nyTime
nyTime <- with_tz(submitTime,tz="America/New_York")
# nyTime
submitTime <- as.character(submitTime)
nyTime <- with_tz(submitTime,tz="America/New_York")
# nyTime
submitTime <- mdy_hms(submitTime)
nyTime <- with_tz(submitTime,tz="America/New_York")
nyTime
a <- list(
學號=c("a23","a22","a41"),
成績=c(88,76,82)
)
map(a,~.[[2]]) # 取出每個元素第二位
map(a,~.[c(1,3)]) # 取出每個元素第一及第三位
map(a,~.[c(T,F,T)]) # 取出每個元素第一及第三位
randomGrades <- sample(40:80,15,replace = T)
randomCredits <- sample(0:3,15,replace=T)
data3 <- list(
成績=randomGrades,
學分數=randomCredits
)
# passData
passData <- list("成績">=60)
View(passData)
# passData
pass <- 成績>=60
# passData
pass <- randomGrades>=60
passData <- list(pass)
View(passData)
# passData
pass <- randomGrades>=60
passData <- randomCredits[pass]
passData
# passData
pass <- randomGrades>=60
passData <- list(randomGrades[pass],randomCredits[pass])
passData
sample(99:103,15,replace = T)-> yy
sample(1:12,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
# twDates
?str_replace
# twDates2
twDates2 <-
str_replace(twDates,c("民國","月"),"")
# twDates2
twDates2 <-
str_replace_all(twDates,c("民國","月"),"")
# twDates2
twDates2 <-
str_replace_all(twDates,c("民國","月"),"")
# twDates2
twDates2 <-
str_replace_all(twDates,c("民國","月"),"")
twDates2
?str_replace_all
# twDates2
twDates2 <-
str_replace_all(twDates,c("民國"="","月"=""))
twDates2
# twDates2
twDates2 <-
str_replace_all(twDates,c("民國"="","月"=""))
twDates2
# westYears
westYears <- str_sub(twDates,3,5)+1911
# westYears
m <- str_sub(twDates,3,5)
westYears <- as.integer(m)=1911
# westYears
m <- str_sub(twDates,3,5)
westYears <- as.integer(m)+1911
# westDates
twDates <- str_c(twDates,"1日")
# westDates
twDates <- str_c(twDates,"1日")
twDates <- ymd(twDates)
# westDates
twDates <- ymd(str_c(twDates,"1日"))
# westDates
twDates <- str_c(twDates,"1日")
sample(99:103,15,replace = T)-> yy
sample(1:12,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
# twDates
# westDates
twDates <- ymd(str_c(twDates,"1日"))
# twDates2
twDates2 <-
str_replace_all(twDates,c("民國"="","月"=""))
twDates2
sample(99:103,15,replace = T)-> yy
sample(1:12,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
# twDates
# twDates2
twDates2 <-
str_replace_all(twDates,c("民國"="","月"=""))
twDates2
# westYears
m <- str_sub(twDates,3,5)
westYears <- as.integer(m)+1911
# westDates
twDates <- str_c(twDates,"1日")
# westYears
m <- str_replace(twDates2,"年","-")
m <- str_sub(twDates2,1,3)
westYears <- as.integer(m)+1911
# westDates
twDates3 <- str_c(twDates2,"-1")
twDates3 <- ymd(twDates3)
# westYears
m <- str_replace(twDates2,"年","-")
m2 <- str_sub(twDates2,1,3)
westYears <- as.integer(m)+1911
# westDates
twDates3 <- str_c(m,"-1")
twDates3 <- ymd(twDates3)
# westDates
twDates3 <- str_c(m,"-1")
#twDates3 <- ymd(twDates3)
# westDates
twDates3 <- str_c(m,"-1")
twDates3 <- ymd(twDates3)
?ymd
# westDates
m3 <- str_sub(m,4)
twDates3 <- str_c(westYears,m3,"-1")
twDates3 <- ymd(twDates3)
# westDates
m3 <- str_sub(m,4)
twDates3 <- str_c(westYears,m3,"-1")
#twDates3 <- ymd(twDates3)
sample(99:103,15,replace = T)-> yy
sample(1:12,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
# twDates
# twDates2
twDates2 <-
str_replace_all(twDates,c("民國"="","月"=""))
twDates2
# westYears
m <- str_replace(twDates2,"年","-")
m2 <- str_sub(twDates2,1,3)
westYears <- as.integer(m)+1911
# twDates2
twDates2 <-
str_replace_all(twDates,c("民國"="","月"=""))
twDates2
# westYears
m <- str_replace(twDates2,"年","-")
m2 <- str_sub(twDates2,1,3)
westYears <- as.integer(m)+1911
# westYears
m <- str_replace(twDates2,"年","-")
m2 <- str_sub(twDates2,1,3)
westYears <- as.integer(m2)+1911
# westDates
m3 <- str_sub(m,4)
twDates3 <- str_c(westYears,m3,"-1")
#twDates3 <- ymd(twDates3)
# westDates
m3 <- str_sub(m,4)
twDates3 <- str_c(westYears,m3,"-1")
twDates3 <- ymd(twDates3)
# westDates
m3 <- str_sub(m,4)
twDates3 <- str_c(westYears,m3,"-1")
westDates <- ymd(twDates3)
load("invoiceList.Rda")
str(invoiceList)
View(params)
View(invoiceList)
library(lubridate); library(stringr); library(dplyr); library(readr); library(purrr)
x <- as.character(round(runif(10)*100),10)
x
# logicBig
logicBig <- x>50
logicBig
load("invoiceList.Rda")
str(invoiceList)
# compoundObject
compoundObject <- list(1L,"hello",TRUE)
load("submitTime.Rda")
# nyTime
submitTime <- mdy_hms(submitTime)
nyTime <- with_tz(submitTime,tz="America/New_York")
nyTime
a <- list(
學號=c("a23","a22","a41"),
成績=c(88,76,82)
)
map(a,~.[[2]]) # 取出每個元素第二位
map(a,~.[c(1,3)]) # 取出每個元素第一及第三位
map(a,~.[c(T,F,T)]) # 取出每個元素第一及第三位
randomGrades <- sample(40:80,15,replace = T)
randomCredits <- sample(0:3,15,replace=T)
data3 <- list(
成績=randomGrades,
學分數=randomCredits
)
# passData
pass <- randomGrades>=60
passData <- list(randomGrades[pass],randomCredits[pass])
passData
sample(99:103,15,replace = T)-> yy
sample(1:12,replace=T)-> mm
str_c("民國",str_pad(yy,3,"left","0"),"年",mm,"月") -> twDates
# twDates
# twDates2
twDates2 <-
str_replace_all(twDates,c("民國"="","月"=""))
twDates2
# westYears
m <- str_replace(twDates2,"年","-")
m2 <- str_sub(twDates2,1,3)
westYears <- as.integer(m2)+1911
# westDates
m3 <- str_sub(m,4)
twDates3 <- str_c(westYears,m3,"-1")
westDates <- ymd(twDates3)
load("invoiceList.Rda")
str(invoiceList)
load("invoiceList.Rda")
str(invoiceList)
# invoiceList
invoiceList <- str_replace(invoiceList,"訂單時間(以訂單時區顯示)","訂單時區之下單時間")
# invoiceList
invoiceList <- str_replace(invoiceList,"訂單時間(以訂單時區顯示)","訂單時區之下單時間")
invoiceList
# invoiceList
invoiceList <- str_replace(invoiceList,"訂單時間(以訂單時區顯示)","訂單時區之下單時間")
invoiceList
load("invoiceList.Rda")
str(invoiceList)
load("invoiceList.Rda")
str(invoiceList)
View(invoiceList)
# invoiceList
invoiceList <- str_replace(invoiceList,"訂單時間(以訂單時區顯示)","訂單時區之下單時間")
invoiceList
load("invoiceList.Rda")
str(invoiceList)
# invoiceList
invoiceList[[2]]
#invoiceList <- str_replace(invoiceList,"訂單時間(以訂單時區顯示)","訂單時區之下單時間")
#invoiceList
# invoiceList
invoiceList[[2]]
#invoiceList <- str_replace(invoiceList,"訂單時間(以訂單時區顯示)","訂單時區之下單時間")
#invoiceList
# invoiceList
t <- invoiceList[[2]]
invoiceList[[2]] <- ymd_hms(t)
View(invoiceList)
load("invoiceList.Rda")
str(invoiceList)
# invoiceList
t <- invoiceList[[2]]
invoiceList[[2]] <- ymd_hms(t)
View(invoiceList)
# invoiceList
t <- invoiceList[[2]]
invoiceList[[2]] <- ymd_hms(t)
invoiceList
View(invoiceList)
# invoiceList
invoiceList[["Name"]][["訂單時間(以訂單時區顯示)"]]
#invoiceList <- str_replace(invoiceList,"訂單時間(以訂單時區顯示)","訂單時區之下單時間")
#invoiceList
# invoiceList
invoiceList[["訂單時間(以訂單時區顯示)"]]
#invoiceList <- str_replace(invoiceList,"訂單時間(以訂單時區顯示)","訂單時區之下單時間")
#invoiceList
load("sampledTranscriptData.Rda")
names(sampledTranscriptData) <-
c('學號','學期成績','學分數','學年','學期','必選修類別（必／選／通）','系級','科目名稱','年級','學屆')
View(sampledTranscriptData)
# failRate
rightsubject <- 科目名稱==科目204
# failRate
rightsubject <- 科目名稱==科目204
load("sampledTranscriptData.Rda")
names(sampledTranscriptData) <-
c('學號','學期成績','學分數','學年','學期','必選修類別（必／選／通）','系級','科目名稱','年級','學屆')
# failRate
rightsubject <- 科目名稱==科目204
# failRate
rightsubject <- sampledTranscriptData[[8]]==科目204
# failRate
rightsubject <- '科目名稱'=='科目204'
學期成績[rightsubject]
# failRate
rightsubject <- '科目名稱'=='科目204'
'學期成績'[rightsubject]
# failRate
rightsubject <- '科目名稱'=='科目204'
rightsubject
# failRate
rightsubject <- '科目名稱'=='科目204'
'學期成績'
# failRate
rightsubject <- '科目名稱'=='科目204'
'學期成績'[rightsubject]
# failRate
rightsubject <- '科目名稱'=='科目204'
fail <- sum('學期成績'[rightsubject]<60)
failRate <- fail/sum('學期成績')
# failRate
rightsubject <- '科目名稱'=='科目204'
grade <- as.integer('學期成績'[rightsubject])
fail <- sum('學期成績'[rightsubject]<60)
failRate <- fail/sum('學期成績')
# failRate
rightsubject <- '科目名稱'=='科目204'
grade <- as.integer('學期成績')
fail <- sum(grade[rightsubject])
failRate <- fail/sum('學期成績')
# failRate
rightsubject <- '科目名稱'=='科目204'
grade <- as.integer('學期成績')
fail <- sum(grade[rightsubject])
failRate <- fail/sum(grade)
failRate
# failRate
rightsubject <- sampledTranscriptData[["科目名稱"]]=='科目204'
grade <- as.integer('學期成績')
fail <- sum(grade[rightsubject])
failRate <- fail/sum(grade)
failRate
# failRate
rightsubject <- sampledTranscriptData[['科目名稱']]=='科目204'
grade <- as.integer(sampledTranscriptData[['學期成績']])
fail <- sum(grade[rightsubject])
failRate <- fail/sum(grade)
failRate
# failRate
rightsubject <- sampledTranscriptData[['科目名稱']]=='科目204'
grade <- as.integer(sampledTranscriptData[['學期成績']])
fail <- sum(grade[rightsubject]<60)
failRate <- fail/sum(grade)
failRate
# failRate
rightsubject <- sampledTranscriptData[['科目名稱']]=='科目204'
grade <- as.integer(sampledTranscriptData[['學期成績']])
fail <- sum(grade[rightsubject]<60)
sum(grade)
failRate <- fail/sum(grade)
failRate
# failRate
rightsubject <- sampledTranscriptData[['科目名稱']]=='科目204'
grade <- as.integer(sampledTranscriptData[['學期成績']])
fail <- sum(grade[rightsubject]<60)
length(grade)
failRate <- fail/length(grade)
failRate
# failRate
rightsubject <- sampledTranscriptData[['科目名稱']]=='科目204'
grade <- as.integer(sampledTranscriptData[['學期成績']])
fail <- sum(grade[rightsubject]<60)
failRate <- fail/length(grade)
failRate
# sampledTranscriptData
sampledTranscriptData$學屆 <-
str_sub(sampledTranscriptData[['學號']],2,4)
sampledTranscriptData$系碼 <-
str_sub(sampledTranscriptData[['學號']],5,6)
# sampledTranscriptData
sampledTranscriptData$學屆 <-
str_sub(sampledTranscriptData[['學號']],2,4)
sampledTranscriptData$系碼 <-
str_sub(sampledTranscriptData[['學號']],5,6)
# sampledTranscriptData
sampledTranscriptData$學屆 <-
str_sub(sampledTranscriptData[['學號']],2,4)
sampledTranscriptData$系碼 <-
str_sub(sampledTranscriptData[['學號']],5,6)
View(sampledTranscriptData)
# sampledTranscriptData$學系
sampledTranscriptData$學系 <-
str_replace_all(sampledTranscriptData[['系級']],c(1="",2="",3="",4=""))
# sampledTranscriptData$學系
sampledTranscriptData$學系 <-
str_replace_all(sampledTranscriptData[['系級']],c("1"="","2"="","3"="","4"=""))
View(sampledTranscriptData)
# changeMajorStudent
changeMajorStudent <- sampledTranscriptData$學號[sampledTranscriptData$系碼 != 73]
changeMajorStudent <-unique(changeMajorStudent)
# studentGPA
student <- sampledTranscriptData$學號 == "410073409b"
student
# studentGPA
student <- sampledTranscriptData$學號 == "410073409b"
sampledTranscriptData$學期成績[student]
# studentGPA
student <-
sampledTranscriptData$學號=="410073409b" & sampledTranscriptData$學年=="101"& sampledTranscriptData$學期=="1"
sampledTranscriptData$學期成績[student]
# studentGPA
student <-
sampledTranscriptData$學號=="410073409b" & sampledTranscriptData$學年=="101"& sampledTranscriptData$學期=="1"
x <- sampledTranscriptData$學期成績[student]
studentGPA <- sum(x*sampledTranscriptData$學分數[student])/sum(sampledTranscriptData$學分數[student])
studentGPA
