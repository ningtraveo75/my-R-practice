---
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
Vector1 <- letters[1:6]
Vector1

names(Vector1)
```

```{r}
names(Vector1) <- c('名稱1','名稱2','名稱3','名稱4','名稱5','名稱6')
names(Vector1)
```

```{r}
Vector1[["名稱4"]]
```

## colnames/rownames

```{r}
StuDF2 <- data.frame(
  學號=c(172,214,322,425,517),
  姓名=c("小明","大雄","胖虎","小新","大白"),
  成績=c(80,60,90,70,50),
  stringsAsFactors = FALSE
  )
StuDF2 
```

```{r}
colnames(StuDF2)
names(StuDF2)
```

```{r}
colnames(StuDF2) <- c("col1","col2","col3")
colnames(StuDF2)
```

只改col2的名稱
```{r}
colnames(StuDF2)[[2]] <- c("姓名")
colnames(StuDF2)
```

改col2,3的名稱
```{r}
colnames(StuDF2)[c(2,3)] <- c("name","grade")
colnames(StuDF2)
```

```{r}
library(stringr)
rownames(StuDF2) <- str_c("第",1:5,"筆")
rownames(StuDF2)
```

## 新增/取代

```{r}
a <- c("1","b","TRUE")
a
a[[2]] <- "c" # 元素存在
a[[5]] <- "7" # 元素不存在
a
```

```{r}
b <- list(
  元素1=1,
  元素2="Hello",
  元素3=TRUE
)
b
b[[3]] <- FALSE
b[[5]] <- "7"
b
```

```{r}
b
b$元素3 <- TRUE
b
```

使用"元素名稱"創新元素
```{r}
names(b)
b[["新元素A"]] <- c(1:3)
b$新元素B <- c(T,F,T)
b
```

```{r}
library(readr)
exData3 <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/exData3.csv",
                    col_types = cols(
                      匯率 = col_number(),
                      期間 = col_character()))
names(exData3)
```

取出「期間」變數轉成date class
```{r}
library(lubridate)
class(exData3$期間)
exData3$期間 <- ymd(exData3$期間)
```

增加一個「isAsiaCrisis」的logical變數，其值為TRUE若「期間」介於1997-06-01到1998-12-01（含前後）
```{r}
isAsiaCrisis <- 
  exData3$期間>=ymd("1997-06-01") & exData3$期間<=ymd("1998-12-01")
isAsiaCrisis
```

利用「isAsiaCrisis」值，結合使用[.R,.C]取出1997-06-01到1998-12-01亞洲金融危機的子樣本
```{r}
子樣本 <- exData3[isAsiaCrisis==T,]
# 與子樣本 <- exData3[isAsiaCrisis,]相等
子樣本
```

```{r}
exampleDF <- data.frame(
  exchangeRate=c(22,3,3,2,7,12,13),
  isAsiaCrisis=c(T,T,F,F,F,T,T)
)
exampleDF
```

```{r}
exampleDF[c(1,2,6,7),]
exampleDF[c(T,T,F,F,F,T,T),]
```


```{r}
library(readr)
transcriptDataFinal <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
```

```{r}
names(transcriptDataFinal)
```

學號“92aS67fee”子樣本
```{r}
stu <- transcriptDataFinal$學號=="92aS67fee"
transcriptDataFinal[stu,]
```

## function
```{r}
utility_cobb_douglass <- function(x,y,.alpha,.beta){
  utilValue <- x^.alpha*y^.beta # 程序產生output值
  return(utilValue) # 傳回output值
}
```

```{r}
class(utility_cobb_douglass)
```

```{r}
utility_cobb_douglass(1,2,0.5,0.8)
```

$$f(x,\alpha)=\alpha+x$$
```{r}
plactice <- function(x,a){
  value <- a+x
  return(value)
}
```

```{r}
plactice(5,3)
```

供給函數Qs=a+b∗P
```{r}
supply_fun <- function(a,b,P){
  Qs <- a+b*P
  return(Qs)
}
```

需求函數Qd=c−d∗P
```{r}
demand_fun <- function(c,d,P){
  Qd <- c-d*P
  return(Qd)
}
```

當a=0,b=1,c=5,d=1，求P=1的超額需求
```{r}
ans <- demand_fun(5,1,1)-supply_fun(0,1,1)
ans
```

```{r}
studentID <-"92aS67fee" 
transcriptDataFinal$學號==studentID -> logiChosenStudent

subSample <- transcriptDataFinal[logiChosenStudent,]

sum(subSample$學期成績*subSample$學分數)/
  sum(subSample$學分數) -> GPA
```

```{r}
gpa_fun <- function(studentID){
  transcriptDataFinal$學號==studentID -> logiChosenStudent
  
  subSample <- transcriptDataFinal[logiChosenStudent,]
  
  sum(subSample$學期成績*subSample$學分數)/
    sum(subSample$學分數) -> GPA
  return(GPA)
}
```

```{r}
gpa_fun("479W9ee8e")
gpa_fun("9efW9aea5")
```

