monthVector
str_c(as.character(westYears),monthVector,"01",sep="/")
twDates2
str_split(twDates2,"年") -> dataSplitList
dataSplitList
map(dataSplitList,~.[[2]]) -> monthList # 取出每個元素第二位
monthList
unlist(monthList) -> monthVector
monthVector
str_c(as.character(westYears),monthVector,"01",sep="-")
twDates2
str_split(twDates2,"年") -> dataSplitList
dataSplitList
map(dataSplitList,~.[[2]]) -> monthList # 取出每個元素第二位
monthList
unlist(monthList) -> monthVector
monthVector
str_c(as.character(westYears),monthVector,"01",sep="-") -> westDates
westDates <- ymd(westDates)
westDates
load("sampledTranscriptData.Rda")
names(sampledTranscriptData) <-
c('學號','學期成績','學分數','學年','學期','必選修類別（必／選／通）','系級','科目名稱','年級','學屆')
(sampledTranscriptData$科目名稱 == "科目204") -> chosenSubjectLogi
sampledTranscriptData$學期成績[chosenSubjectLogi] -> chosenGrades
sum(chosenGrades<60)/length(chosenGrades) -> failRate
failRate
# failRate
rightsubject <- sampledTranscriptData[['科目名稱']]=='科目204'
grade <- as.integer(sampledTranscriptData[['學期成績']])
fail <- sum(grade[rightsubject]<60)
failRate <- fail/length(grade[rightsubject])
failRate
# failRate
rightsubject <- sampledTranscriptData[['科目名稱']]=='科目204'
grade <- as.integer(sampledTranscriptData[['學期成績']])
fail <- sum(grade[rightsubject]<60)
failRate <- fail/length(grade)
failRate
# sampledTranscriptData
sampledTranscriptData$學屆 <-
str_sub(sampledTranscriptData[['學號']],2,4)
sampledTranscriptData$系碼 <-
str_sub(sampledTranscriptData[['學號']],5,6)
# sampledTranscriptData
sampledTranscriptData$學屆 <-
str_sub(sampledTranscriptData[['學號']],2,4)
sampledTranscriptData$系碼 <-
str_sub(sampledTranscriptData[['學號']],5,6)
sampledTranscriptData
# sampledTranscriptData
sampledTranscriptData$學屆 <-
str_sub(sampledTranscriptData[['學號']],2,4)
sampledTranscriptData$系碼 <-
str_sub(sampledTranscriptData[['學號']],5,6)
head(sampledTranscriptData)
# sampledTranscriptData
sampledTranscriptData$學屆 <-
str_sub(sampledTranscriptData[['學號']],2,4)
sampledTranscriptData$系碼 <-
str_sub(sampledTranscriptData[['學號']],5,6)
head(sampledTranscriptData$學屆)
head((sampledTranscriptData$系碼))
# sampledTranscriptData$學系
sampledTranscriptData$學系 <-
str_replace_all(sampledTranscriptData[['系級']],c("1"="","2"="","3"="","4"=""))
# sampledTranscriptData$學系
sampledTranscriptData$學系 <-
str_replace_all(sampledTranscriptData[['系級']],c("1"="","2"="","3"="","4"=""))
head(sampledTranscriptData$學系)
# sampledTranscriptData$學系
sampledTranscriptData$學系 <-
str_replace_all(sampledTranscriptData[['系級']],c("1"="","2"="","3"="","4"=""))
head(sampledTranscriptData$系級)
head(sampledTranscriptData$學系)
sampledTranscriptData$學系 <-
str_replace_all(sampledTranscriptData[['系級']],"[:digit:]","")
head(sampledTranscriptData$學系)
# changeMajorStudent
changeMajorStudent <- sampledTranscriptData$學號[sampledTranscriptData$系碼 != 73]
changeMajorStudent <-unique(changeMajorStudent)
# changeMajorStudent
changeMajorStudent <- sampledTranscriptData$學號[sampledTranscriptData$系碼 != 73]
changeMajorStudent <-unique(changeMajorStudent)
head(changeMajorStudent)
(sampledTranscriptData$系碼!="73" &
sampledTranscriptData$學系=="經濟學系") -> logiCheck
unique(sampledTranscriptData$學號[logiCheck]) -> changeMajorStudent
changeMajorStudent
# changeMajorStudent
changeMajorStudent <- sampledTranscriptData$學號[sampledTranscriptData$系碼 != 73 & sampledTranscriptData$學系=="經濟學系"]
changeMajorStudent <-unique(changeMajorStudent)
head(changeMajorStudent)
# changeMajorStudent
changeMajorStudent <- sampledTranscriptData$學號[sampledTranscriptData$系碼 != 73]
changeMajorStudent <-unique(changeMajorStudent)
head(changeMajorStudent)
(sampledTranscriptData$學號 == "410073409b" &
sampledTranscriptData$學年==100 &
sampledTranscriptData$學期==1) -> logiSelect
sum(sampledTranscriptData$學分數[logiSelect]*
sampledTranscriptData$學期成績[logiSelect])/sum(sampledTranscriptData$學分數[logiSelect]) -> studentGPA
studentGPA
(sampledTranscriptData$學號 == "410073409b" &
sampledTranscriptData$學年==101 &
sampledTranscriptData$學期==1) -> logiSelect
sum(sampledTranscriptData$學分數[logiSelect]*
sampledTranscriptData$學期成績[logiSelect])/sum(sampledTranscriptData$學分數[logiSelect]) -> studentGPA
studentGPA
list(
學系=unique(sampledTranscriptData$學系),
系碼=unique(sampledTranscriptData$系碼)
)
list(
學系=unique(sampledTranscriptData$學系),
系碼=unique(sampledTranscriptData$系碼)
)
list
list(
學系=unique(sampledTranscriptData$學系),
系碼=unique(sampledTranscriptData$系碼)
)
list(
學系=unique(sampledTranscriptData$學系),
系碼=unique(sampledTranscriptData$系碼)
) -> a
a
View(a)
list(
學系=sampledTranscriptData$學系,
系碼=sampledTranscriptData$系碼
) -> a
a <- unique(a)
View(a)
list(
學系=unique(sampledTranscriptData$學系),
系碼=unique(sampledTranscriptData$系碼)
) -> a
a
knitr::opts_chunk$set(echo = TRUE)
Vector1 <- letters[1:6]
Vector1
names(Vector1)
names(Vector1) <- c('名稱1','名稱2','名稱3','名稱4','名稱5','名稱6')
names(Vector1)
Vector1[["名稱4"]]
StuDF2 <- data.frame(
學號=c(172,214,322,425,517),
姓名=c("小明","大雄","胖虎","小新","大白"),
成績=c(80,60,90,70,50),
stringsAsFactors = FALSE
)
StuDF2
colnames(StuDF2)
names(StuDF2)
colnames(StuDF2) <- c("col1","col2","col3")
colnames(StuDF2)
colnames(StuDF2) <- c("姓名")
colnames(StuDF2)
colnames(StuDF2)[[2]] <- c("姓名")
colnames(StuDF2)
StuDF2 <- data.frame(
學號=c(172,214,322,425,517),
姓名=c("小明","大雄","胖虎","小新","大白"),
成績=c(80,60,90,70,50),
stringsAsFactors = FALSE
)
StuDF2
colnames(StuDF2)
names(StuDF2)
colnames(StuDF2) <- c("col1","col2","col3")
colnames(StuDF2)
colnames(StuDF2)[[2]] <- c("姓名")
colnames(StuDF2)
colnames(StuDF2)[c(2,3)] <- c("name","grade")
colnames(StuDF2)
View(StuDF2)
install.packages("stringr")
rownames(StuDF2) <- str_c("第",1:5,"筆")
library(stringr)
rownames(StuDF2) <- str_c("第",1:5,"筆")
rownames(StuDF2)
a <- c("1","b","TRUE")
a
a[[2]] <- "c" # 元素存在
a[[5]] <- "7" # 元素不存在
a
b <- list(
元素1=1,
元素2="Hello",
元素3=TRUE
)
b
b[[3]] <- FALSE
b[[5]] <- "7"
b
b <- list(
元素1=1,
元素2="Hello",
元素3=TRUE
)
b
b[[3]] <- FALSE
b[[5]] <- "7"
b
b
b$元素3 <- TRUE
b
b
b$元素3 <- TRUE
b
names(b)
b[["新元素A"]] <- c(1:3)
b$新元素B <- c(T,F,T)
b
library(readr)
exData3 <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/exData3.csv",
col_types = cols(
匯率 = col_number(),
期間 = col_character()))
View(exData3)
library(lubridate)
library(lubridate)
class(exData3$期間)
exData3$期間 <- ymd(exData3$期間)
View(exData3)
isAsiaCrisis <-
exData3>=ymd(1997-06-01) & exData3<=ymd(1998-12-01)
isAsiaCrisis <-
exData3>=ymd("1997-06-01") & exData3<=ymd("1998-12-01")
isAsiaCrisis <-
exData3$期間>=ymd("1997-06-01") & exData3$期間<=ymd("1998-12-01")
isAsiaCrisis
isAsiaCrisis <-
exData3$期間>=ymd("1997-06-01") & exData3$期間<=ymd("1998-12-01")
sum(isAsiaCrisis)
isAsiaCrisis <-
exData3$期間>=ymd("1997-06-01") & exData3$期間<=ymd("1998-12-01")
isAsiaCrisis
View(exData3)
exData3[isAsiaCrisis]
exData3[isAsiaCrisis,]
View(exData3)
exData3[isAsiaCrisis==T,]
View(b)
子樣本 <- exData3[isAsiaCrisis==T,]
子樣本
View(子樣本)
子樣本 <- exData3[isAsiaCrisis==T]
View(子樣本)
library(readr)
exData3 <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/exData3.csv",
col_types = cols(
匯率 = col_number(),
期間 = col_character()))
names(exData3)
library(lubridate)
class(exData3$期間)
exData3$期間 <- ymd(exData3$期間)
isAsiaCrisis <-
exData3$期間>=ymd("1997-06-01") & exData3$期間<=ymd("1998-12-01")
isAsiaCrisis
子樣本 <- exData3[isAsiaCrisis==T,]
子樣本
子樣本 <- exData3[isAsiaCrisis==T]
子樣本 <- exData3[isAsiaCrisis==T,]
子樣本
exampleDF <- data.frame(
exchangeRate=c(22,3,3,2,7,12,13)
isAsiaCrisis=c(T,T,F,F,F,T,T)
exampleDF <- data.frame(
exchangeRate=c(22,3,3,2,7,12,13),
isAsiaCrisis=c(T,T,F,F,F,T,T)
)
exampleDF
exampleDF[c(1,2,6,7),]
exampleDF[c(T,T,F,F,F,T,T),]
knitr::opts_chunk$set(echo = TRUE)
library(readr)
transcriptDataFinal <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
names(transcriptDataFinal)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
transcriptDataFinal <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
names(transcriptDataFinal)
子樣本 <- transcriptDataFinal["學號"="92aS67fee",]
View(transcriptDataFinal)
子樣本 <- transcriptDataFinal[,"學號"="92aS67fee"]
View(transcriptDataFinal)
子樣本 <- transcriptDataFinal[,學號="92aS67fee"]
子樣本 <- transcriptDataFinal[學號="92aS67fee",]
stu <- transcriptDataFinal["學號"]="92aS67fee"
stu <- transcriptDataFinal["學號",]="92aS67fee"
stu <- transcriptDataFinal$學號="92aS67fee"
View(transcriptDataFinal)
library(readr)
transcriptDataFinal <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
names(transcriptDataFinal)
View(transcriptDataFinal)
library(readr)
transcriptDataFinal <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
stu <- transcriptDataFinal$學號=="92aS67fee"
stu
stu <- transcriptDataFinal$學號=="92aS67fee"
transcriptDataFinal[stu,]
View(transcriptDataFinal)
utility_cobb_douglass <- function(x,y,.alpha,.beta){
utilValue <- x^.alpha*y^.beta # 程序產生output值
return(utilValue) # 傳回output值
}
class(utility_cobb_douglass())
class(utility_cobb_douglass)
utility_cobb_douglass(1,2,0.5,0.8)
plactice <- function(x,a){
value <- x+a
return(value)
}
plactice(5,3)
plactice <- function(x,a){
value <- a+x
return(value)
}
supply_fun <- function(a,b,P){
sup_value <- a+b*P
return(sup_value)
}
demand_fun <- function(c,d,P){
dem_value <- c-d*P
return(dem_value)
}
supply_fun <- function(a,b,P){
Qs <- a+b*P
return(Qs)
}
demand_fun <- function(c,d,P){
Qd <- c-d*P
return(Qd)
}
ans <- supply_fun(0,1,1)-demand_fun(5,1,1)
ans
ans <- demand_fun(5,1,1)-supply_fun(0,1,1)
ans
gpa_fun <- function(studentID){
transcriptDataFinal$學號==studentID -> logiChosenStudent
subSample <- transcriptDataFinal[logiChosenStudent,]
sum(subSample$學期成績*subSample$學分數)/
sum(subSample$學分數) -> GPA
return(GPA)
}
gpa_fun("479W9ee8e")
gpa_fun("9efW9aea5")
knitr::opts_chunk$set(echo = TRUE, eval=F, message=F, warning = F)
library(lubridate)
(invoiceList$訂單時區=="America/New_York") -> nyLogical
load("invoiceList.Rda")
str(invoiceList)
# invoiceList
names(invoiceList)[[2]] <- "訂單時區之下單時間"
# invoiceList
t <- invoiceList[[2]]
invoiceList[[2]] <- ymd_hms(t)
invoiceList
library(lubridate)
(invoiceList$訂單時區=="America/New_York") -> nyLogical
View(params)
View(invoiceList)
knitr::opts_chunk$set(echo = TRUE, eval=F, message=F, warning = F)
load("invoiceList.Rda")
str(invoiceList)
View(invoiceList)
library(lubridate); library(stringr); library(dplyr); library(readr); library(purrr)
load("invoiceList.Rda")
str(invoiceList)
View(invoiceList)
# invoiceList
names(invoiceList)[[2]] <- "訂單時區之下單時間"
View(invoiceList)
library(lubridate)
(invoiceList$訂單時區=="America/New_York") -> nyLogical
(invoiceList$訂單時區=="Asia/Taipei") -> tpLogical
ymd_hms(invoiceList$`訂單時區之下單時間`[nyLogical],tz="America/New_York") -> nyDateTime
invoiceList$UTC時間[nyLogical] <- with_tz(nyDateTime,tzone="UTC")
ymd_hms(invoiceList$`訂單時區之下單時間`[tpLogical],tz="Asia/Taipei") -> tpDateTime
invoiceList$UTC時間[tpLogical] <- with_tz(tpDateTime,tzone="UTC")
invoiceList
library(lubridate)
(invoiceList$訂單時區=="America/New_York") -> nyLogical
(invoiceList$訂單時區=="Asia/Taipei") -> tpLogical
invoiceList$nyLogical <- nyLogical
invoiceList$tpLogical <- tpLogical
ymd_hms(invoiceList$`訂單時區之下單時間`[nyLogical],tz="America/New_York") -> nyDateTime
invoiceList$UTC時間[nyLogical] <- with_tz(nyDateTime,tzone="UTC")
ymd_hms(invoiceList$`訂單時區之下單時間`[tpLogical],tz="Asia/Taipei") -> tpDateTime
invoiceList$UTC時間[tpLogical] <- with_tz(tpDateTime,tzone="UTC")
invoiceList
View(invoiceList)
nyDateTime
View(invoiceList)
load("invoiceList.Rda")
str(invoiceList)
View(invoiceList)
# invoiceList
names(invoiceList)[[2]] <- "訂單時區之下單時間"
View(params)
View(invoiceList)
load("invoiceList.Rda")
str(invoiceList)
?str()
View(invoiceList)
# invoiceList
names(invoiceList)[[2]] <- "訂單時區之下單時間"
View(invoiceList)
names(invoiceList)[[1]] <- "訂單時區"
names(invoiceList)[[3]] <- "UTC時間"
View(invoiceList)
library(lubridate)
(invoiceList$訂單時區=="America/New_York") -> nyLogical
(invoiceList$訂單時區=="Asia/Taipei") -> tpLogical
invoiceList$nyLogical <- nyLogical
invoiceList$tpLogical <- tpLogical
ymd_hms(invoiceList$`訂單時區之下單時間`[nyLogical],tz="America/New_York") -> nyDateTime
invoiceList$UTC時間[nyLogical] <- with_tz(nyDateTime,tzone="UTC")
ymd_hms(invoiceList$`訂單時區之下單時間`[tpLogical],tz="Asia/Taipei") -> tpDateTime
invoiceList$UTC時間[tpLogical] <- with_tz(tpDateTime,tzone="UTC")
invoiceList
knitr::opts_chunk$set(echo = TRUE)
library(readr)
transcriptDataFinal <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
gpa_fun <- function(studentID){
transcriptDataFinal$學號==studentID -> logiChosenStudent
subSample <- transcriptDataFinal[logiChosenStudent,]
sum(subSample$學期成績*subSample$學分數)/
sum(subSample$學分數) -> GPA
return(GPA)
}
library(readr)
transcriptDataFinal <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
gpa_fun <- function(studentID){
transcriptDataFinal$學號==studentID -> logiChosenStudent
subSample <- transcriptDataFinal[logiChosenStudent,]
sum(subSample$學期成績*subSample$學分數)/
sum(subSample$學分數) -> GPA
return(GPA)
}
gpa_fun("479W9ee8e")
gpa_fun("9efW9aea5")
x <- ymd_hms("1973-02-21 12:05:22")
tzchange <- with_tz(x,tz="Asia/Taipei")
tzchange <- with_tz(ymd_hms("1973-02-21 12:05:22"),tz="Asia/Taipei")
fromTzone <- ymd_hms("1973-02-21 12:05:22")
tzchange <- with_tz(ymd_hms("1973-02-21 12:05:22"),tz="Asia/Taipei")
fromTzone <- ymd_hms("1973-02-21 12:05:22")
toTzone <- with_tz(ymd_hms("1973-02-21 12:05:22"),tz="Asia/Taipei")
fromTzone <- ymd_hms("1973-02-21 12:05:22")
toTzone <- with_tz(fromTzone,tz="Asia/Taipei")
fromDateTime <- ymd_hms("1973-02-21 12:05:22")
toDateTime <- with_tz(fromTzone,tz="Asia/Taipei")
fromDateTime <- ymd_hms("1973-02-21 12:05:22")
toDateTime <- with_tz(fromTzone,tz="Asia/Taipei")
fromDateTime <- ymd_hms("1973-02-21 12:05:22")
toDateTime <- with_tz(fromTzone,tz="Asia/Taipei")
fromDateTime <- ymd_hms("1973-02-21 12:05:22")
toDateTime <- with_tz(fromDateTime,tz="Asia/Taipei")
toDateTime
ymd_hms_tzChange <- function(input){
fromTzone <- ymd_hms(input)
toTzone <- with_tz(fromTzone,tz="Asia/Taipei")
return(toDateTime)
}
ymd_hms_tzChange("1973-02-21 12:05:22")
ymd_hms_tzChange(1973-02-21 12:05:22)
ymd_hms_tzChange <- function(input){
fromTzone <- ymd_hms("input")
toTzone <- with_tz(fromTzone,tz="Asia/Taipei")
return(toDateTime)
}
ymd_hms_tzChange(1973-02-21 12:05:22)
ymd_hms_tzChange <- function(input){
fromTzone <- ymd_hms(input)
toTzone <- with_tz(fromTzone,tz="Asia/Taipei")
return(toDateTime)
}
ymd_hms_tzChange("1973-02-21 12:05:22")
ymd_hms_tzChange <- function(input,fromTzone,toTzone){
fromDateTime <- ymd_hms(input,tz=fromTzone)
toDateTime <- with_tz(fromDateTime,tz=toTzone)
toDateTime
}
ymd_hms_tzChange("1973-02-21 12:05:22","America/New_York","Asia/Taipei")
ymd_hms_tzChange <- function(input,fromTzone,toTzone){
fromDateTime <- ymd_hms(input,tz=fromTzone)
toDateTime <- with_tz(fromDateTime,tz=toTzone)
toDateTime
}
ymd_hms_tzChange("1973-02-21 12:05:22","America/New_York","Asia/Taipei")
View(ymd_hms_tzChange)
ymd_hms_tzChange <- function(input,fromTzone,toTzone){
fromDateTime <- ymd_hms(input,tz=fromTzone)
toDateTime <- with_tz(fromDateTime,tz=toTzone)
return(toDateTime)
}
ymd_hms_tzChange("1973-02-21 12:05:22","America/New_York","Asia/Taipei")
ymd_hms_tzChange <- function(input,fromTzone,toTzone){
fromDateTime <- ymd_hms(input,tz=fromTzone)
toDateTime <- with_tz(fromDateTime,tz=toTzone)
return(toDateTime)
}
ymd_hms_tzChange("1973-02-21 12:05:22","America/New_York","Asia/Taipei")
fromDateTime <- ymd_hms("1973-02-21 12:05:22",tz="America/New_York")
toDateTime <- with_tz(fromDateTime,tz="Asia/Taipei")
toDateTime
ymd_hms_tzChange("1973-02-21 12:05:22","American/New_York","Asia/Taipei")
