---
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

#8.1.3
```{r}
nowAnnounce <- function(){
  currentDateTime <- Sys.time()
  hh<-hour(currentDateTime)
  mm<-minute(currentDateTime)
  cat("現在是",hh,"點",mm,"分")
}
```

```{r}
nowAnnounce()
```

```{r}
browseURL("https://www.ntpu.edu.tw")
```

```{r}
textbookURL <- function(){
  browseURL("https://via.hypothes.is/https://bookdown.org/tpemartin/ntpu-programming-for-data-science/")
}
```

```{r}
textbookURL()
```

#8.1.4
```{r}
library(readr)
transcriptDataFinal <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
```

```{r}
gpa_fun <- function(studentID){
  transcriptDataFinal$學號==studentID -> logiChosenStudent
  
  subSample <- transcriptDataFinal[logiChosenStudent,]
  
  sum(subSample$學期成績*subSample$學分數)/
    sum(subSample$學分數) -> GPA
  return(GPA)
}
```

## return中有list
```{r}
gpa_fun2 <- function(studentID){
  transcriptDataFinal$學號==studentID -> logiChosenStudent
  
  subSample <- transcriptDataFinal[logiChosenStudent,]
  
  sum(subSample$學期成績*subSample$學分數)/
    sum(subSample$學分數) -> GPA
  return(
    list(
      平均成績=GPA,
      成績單=subSample
      )
  )
}
```

```{r}
gpa_fun2("92aS67fee") -> outputValue
outputValue$平均成績
outputValue$成績單
```

創造一個demand_supply_fun(P,a,b,c,d)，它會輸出一個list包含三個元素：供給量，需求量，超額供給量
```{r}
demand_supply_fun <- function(P,a,b,c,d){
  Qs <- a+b*P
  Qd <- c-d*P
  ans <- Qd-Qs
  return(
    list(
      供給量=Qs,
      需求量=Qd,
      超額供給量=ans
      )
  )
}
```

```{r}
demand_supply_fun(1,0,1,5,1)
```

## 條件
```{r}
a <- readline(prompt = "請輸入一個數字： ")
if(a < 0) {
  print("a為負值")
}
```

```{r}
supply_fun2 <- function(P,a,b){
  Qs <- a+b*P
  if(P>=0) {
    return(Qs)
  }
}
supply_fun2(P=-1,0,1)
supply_fun2(P=2,0,1)
```

```{r}
supply_fun3 <- function(P,a,b){
  Qs <- a+b*P
  if(P < 0) {
    message("P不能為負值") # 在螢幕出現的「錯誤」提示，沒有輸出任何值
  } else {
    return(Qs)
  }
}
supply_fun3(P=-1,0,1)
supply_fun3(P=2,0,1)
```


```{r}
gpa_fun <- function(studentID){
  if(studentID %in% transcriptDataFinal$學號){
    transcriptDataFinal$學號==studentID -> logiChosenStudent
    subSample <- transcriptDataFinal[logiChosenStudent,]
    sum(subSample$學期成績*subSample$學分數)/
      sum(subSample$學分數) -> GPA
    return(GPA)
  } else{
    message("查無此學號")
  }
}
```

```{r}
gpa_fun("92aS67fee") # 顯示82.85276
gpa_fun("aa829838s") # 查無此學號
```

```{r}
a <- readline(prompt = "請輸入一個數字： ")
if(a==1) {
  print("你輸入了1")
} else if(a==2) {
  print("你輸入了2")
} else if(a==3) {
  print("你輸入了3")
} else {
  print("你輸入了其他數字")
}
```

```{r}
supply_fun4 <- function(P,a,b){
  Qs <- a+b*P
  if(P < 0) {
    message("P不能為負值") # 在螢幕出現的「錯誤」提示，沒有輸出任何值
  } else if(P < -a/b) {
    message("P必需大於等於",-a/b,"(即-a/b值)")
  } else {
    return(Qs)
  }
}
supply_fun4(P=-1,-3,1)
supply_fun4(P=2,-3,1)
supply_fun4(P=3,-3,1)
```

```{r}
 fizzbuzz <- function(x){
  if(x%%15==0){
    return("fizzbuzz")
  } else if(x%%3==0){
    return("fizz")
  } else if(x%%5==0){
    return("buzz")
  } else {
    return(x)
  } 
 }
```
#另解
```{r}
fizzbuzz <- function(input){
  zeroRemBy3 <- input %% 3 == 0
  zeroRemBy5 <- input %% 5 == 0
  if(zeroRemBy3 & !zeroRemBy5){
    return("fizz")
  } else if(zeroRemBy5 & !zeroRemBy3){
    return("buzz")
  } else if(zeroRemBy3 & zeroRemBy5){
    return("fizzbuzz")
  } else{
    return(input)
  }
}
```

```{r}
fizzbuzz(9)
fizzbuzz(10)
fizzbuzz(30)
fizzbuzz(1)
```

## any all
```{r}
a <- c(1,3,5)
a
a>2 # 此邏輯條件產生三個值
```

```{r}
if(a>2) {
  print("a大於2")
}
```

要每個a元素都>2，使用all()
```{r}
a
a>2
all(a>2)
any(a>2)
```

```{r}
if(all(a>2)) {
  print("a大於2")
}
```

```
if(studentID %in% transcriptDataFinal$學號)
```
可以用
```
if(any(studentID == transcriptDataFinal$學號))
```
## Environment
```{r}
a <- 3

testfun <- function(x){
  y <- a/4
  output <- x*y
  return(output)
}

testfun(2) #called

a <- 4
testfun(2)
```

```{r}
library(readr)
transcriptDataFinal <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
```

```{r}
gpa_fun <- function(studentID){
  if(studentID %in% transcriptDataFinal$學號){
    transcriptDataFinal$學號==studentID -> logiChosenStudent
    subSample <- transcriptDataFinal[logiChosenStudent,]
    sum(subSample$學期成績*subSample$學分數)/
      sum(subSample$學分數) -> GPA
    return(GPA)
  } else{
    message("查無此學號")
  }
}

gpa_fun("92aS67fee") # 顯示82.85276
gpa_fun("aa829838s") # 查無此學號
```

```{r}
transcriptDataFinal[transcriptDataFinal$學號 != "92aS67fee",] -> transcriptDataFinal
```

```{r}
gpa_fun("92aS67fee") # 顯示82.85276
```

```{r}
gpa_fun4 <- function(studentID,transcriptDataFinal){
  if(studentID %in% transcriptDataFinal$學號){
    transcriptDataFinal$學號==studentID -> logiChosenStudent
    subSample <- transcriptDataFinal[logiChosenStudent,]
    sum(subSample$學期成績*subSample$學分數)/
      sum(subSample$學分數) -> GPA
    return(GPA)
  } else{
    message("查無此學號")
  }
}
```

```{r}
transcriptDataFinal <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcriptDataFinal.csv")
gpa_fun4("92aS67fee",transcriptDataFinal)
```

